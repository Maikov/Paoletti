<!-- *********************************************************************************** -->
<!-- *** Part of OpenShop project: http://OpenShop.org.ua (c) MaxD                   *** -->
<!-- *********************************************************************************** -->
<!-- Redistribution in any form without written permission is prohibited.                -->

<!-- This is Lite version of eGoods extension. Read about full version at http://OpenShop.org.ua/digital -->

<modification>
	<id><![CDATA[Downloads and samples display at product page.]]></id>
	<version><![CDATA[1.3]]></version>
	<vqmver><![CDATA[]]></vqmver>
	<author><![CDATA[MaxD http://OpenShop.org.ua]]></author>
	<file name="catalog/view/theme/*/template/product/product.tpl">
		<operation error="log">
			<search position="before" offset="2"><![CDATA[<h2><?php echo $text_option; ?></h2>]]></search>
			<add><![CDATA[<!--MX start Downloads-->
<?php if ($downloads) { ?>
      <div class="options">
          <?php foreach ($downloads as $download) { ?>
          <?php if ($download['remaining']==0) { ?>
            <?php if ($download['icon']) { ?>
            <img src="<?php echo $download['icon']; ?>" align="center" />
             <?php } ?>
             <a href="<?php echo $download['href']; ?>">
             <?php echo $download['name']; ?></a>
             <span class="price-tax"><i><?php echo $download['size']; ?></i></span><br /><br />
          <?php } ?><?php } ?>
      </div>
      <?php } ?><!--MX end-->]]></add>
		</operation>
	</file>
	<file name="catalog/model/catalog/product.php">
		<operation error="log">
			<search position="before"><![CDATA[public function getProductOptions($product_id) {]]></search>
			<add><![CDATA[//MX Start
    public function getProductDownloads($product_id,$price) {
        $product_downloads_data = array();
        $product_download_query = $this->db->query(
        "SELECT * FROM " . DB_PREFIX . "download d
        LEFT JOIN " . DB_PREFIX . "product_to_download p2d ON (d.download_id = p2d.download_id)
        LEFT JOIN " . DB_PREFIX . "download_description dd ON (d.download_id = dd.download_id)
        WHERE p2d.product_id = '" . (int)$product_id .
        "' AND dd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY d.download_id");

        // Check if this product is purchased
        $odownloads = false; // order_download entries
        if ($this->customer->isLogged()) {
            $odownloads = $this->db->query( "SELECT * FROM " . DB_PREFIX . "order_download od
                    LEFT JOIN `" . DB_PREFIX . "order` o ON (od.order_id = o.order_id)
                    LEFT JOIN " . DB_PREFIX . "order_product op ON (od.order_product_id = op.order_product_id)
                    WHERE o.customer_id = '" . (int)$this->customer->getId() . "'
                    AND o.order_status_id > '0' AND o.order_status_id = '"
                    . (int)$this->config->get('config_complete_status_id') . "'
                    AND op.product_id = '" . (int)$product_id . "'");
        }

                foreach ($product_download_query->rows as $download) {
                    // --- Check file existance and size
                    $size=false;
                    if (strpos($download['filename'],'/')!==false) {
                    	if (strpos($download['filename'],'://')===false)
                    	 if ($download['filename'][0]=='/') $download['filename']='http://' . $_SERVER['HTTP_HOST'] . $download['filename'];
                    	  else $download['filename']=HTTP_SERVER . substr($download['filename'],1);
                    	$ch = curl_init($download['filename']);
                    	curl_setopt($ch, CURLOPT_NOBODY, true);
                    	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    	curl_setopt($ch, CURLOPT_HEADER, true);
                    	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
                    	curl_setopt($ch, CURLOPT_TIMEOUT, 5);
                    	$data = curl_exec($ch);
                    	curl_close($ch);
                    	if (preg_match('/Content-Length: (\d+)/', $data, $matches)) $size=(int)$matches[1];
                      } else if (file_exists(DIR_DOWNLOAD . $download['filename']))
                      	$size = filesize(DIR_DOWNLOAD . $download['filename']);
		    if ($size) {
                        $i = 0;
                        $suffix = array('bytes','Kb','Mb','Gb','Tb');
                        while (($size / 1024) > 1) {
                            $size = $size / 1024;
                            $i++;
                        }
                        $size = '('.round(substr($size, 0, strpos($size, '.') + 4), 2) ."&nbsp;". $suffix[$i].')';
                    }
                    // ---- Download url --------
                    $href = false;
                    if (($download['remaining']==0) or ($price==0))
                        $href = $this->url->link('account/download/downloadi', 'download_id=' . $download['download_id']);
                    else if ($odownloads) {
                        $order_download_id = 0;
                        foreach($odownloads->rows as $od) // Find order_download_id
                          if ($download['filename']==$od['filename']) $order_download_id=$od['order_download_id'];
                        if ($order_download_id) $href = $this->url->link('account/download/download',
                                                        'order_download_id=' . $order_download_id, 'SSL');
                    }

                    // ---------- File Icon ------------
                    if ($download['mask']) $ext=strtolower(substr(strrchr($download['mask'],'.'),1));
                       else $ext=strtolower(substr(strrchr($download['filename'],'.'),1));
                    if (file_exists(DIR_DOWNLOAD . 'icons/'.$ext.'.png'))
                        $icon='download/icons/'.$ext.'.png';
                        else $icon=false;

                    $product_downloads_data[] = array(
                        'download_id' => $download['download_id'],
                        'filename'    => $download['filename'],
                        'mask'        => $download['mask'],
                        'remaining'   => $download['remaining'],
                        'date_added'  => $download['date_added'],
                        'name'        => $download['name'],
                        'size'        => $size,
                        'href'        => $href,
                        'icon'        => $icon
                    );
                }

        return $product_downloads_data;
    }
    // MX End]]></add>
		</operation>
	</file>
	<file name="catalog/model/checkout/order.php">
		<operation error="log">
			<search position="after"><![CDATA[foreach ($product['download'] as $download) {]]></search>
			<add><![CDATA[if ($download['remaining']>0) //MX patch samples]]></add>
		</operation>
	</file>
	<file name="catalog/controller/product/product.php">
		<operation error="log">
			<search position="before"><![CDATA[$this->data['options'] = array();]]></search>
			<add><![CDATA[$this->data['downloads'] = $this->model_catalog_product->getProductDownloads($this->request->get['product_id'],$product_info['price']); //MX Insert]]></add>
		</operation>
	</file>
	<file name="catalog/controller/account/download.php">
		<operation error="log">
			<search position="before"><![CDATA[public function download() {]]></search>
			<add><![CDATA[    // MX Start: My Download function (download_id)  TODO: magic number for mail download link
    public function downloadi() {

	
        $download_info = $this->db->query("SELECT * FROM " . DB_PREFIX . "download WHERE download_id=".
                    $this->request->get['download_id'])->row;

        if ($download_info['remaining']>0) { // Not a sample
          $query=$this->db->query( "SELECT * FROM " . DB_PREFIX . "product p
                 LEFT JOIN " . DB_PREFIX . "product_to_download p2d ON (p.product_id = p2d.product_id)
                 WHERE download_id=".$this->request->get['download_id']);
          if ($query->row['price']>0) {
          Echo "This download is locked!";
          exit; }
        }

        if ($download_info) {
            $file = DIR_DOWNLOAD . $download_info['filename'];
            $mask = basename($download_info['mask']);

            if (!headers_sent()) {
                if (file_exists($file)) {
                    header('Content-Type: application/octet-stream');
                    header('Content-Description: File Transfer');
                    header('Content-Disposition: attachment; filename="' . ($mask ? $mask : basename($file)) . '"');
                    header('Content-Transfer-Encoding: binary');
                    header('Expires: 0');
                    header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
                    header('Pragma: public');
                    header('Content-Length: ' . filesize($file));

                    readfile($file, 'rb');

                    exit;
                } else {
                    exit('Error: Could not find file ' . $file . '!');
                }
            } else {
                exit('Error: Headers already sent out!');
            }
        } else {
            $this->redirect($this->url->link('account/download', '', 'SSL'));
        }
    }
    // MX End]]></add>
		</operation>
	</file>
</modification>